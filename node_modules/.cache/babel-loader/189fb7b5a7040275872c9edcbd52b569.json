{"ast":null,"code":"var _jsxFileName = \"/Users/malan/Desktop/React_practice/HW/3/src/components/App.js\";\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactsForm from './contactsForm';\nimport Filter from './filter';\nimport ContactList from './contactList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n    this.componentDidMount = () => {\n      const savedContacts = localStorage.getItem('contacts');\n    };\n    this.onFilterChange = e => {\n      this.setState({\n        filter: e.target.value\n      });\n    };\n    this.createContact = data => {\n      const exist = [...this.state.contacts].some(item => item.name === data.name);\n      if (!exist) {\n        this.setState(prev => ({\n          contacts: [...prev.contacts, {\n            id: nanoid(),\n            ...data\n          }]\n        }));\n      } else {\n        alert(`${data.name} is already in contacts`);\n      }\n    };\n    this.removeContact = e => {\n      this.setState(prev => ({\n        contacts: prev.contacts.filter(contact => contact.id !== e.target.id)\n      }));\n    };\n  }\n  componentDidUpdate(_, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const filterNormalized = this.state.filter.toLowerCase();\n    const filtered = [...this.state.contacts].filter(contact => contact.name.toLowerCase().includes(filterNormalized));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactsForm, {\n        getData: this.createContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        onFilterChange: this.onFilterChange,\n        filter: this.state.filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        filtered: filtered,\n        removeContact: this.removeContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","nanoid","ContactsForm","Filter","ContactList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","arguments","state","contacts","id","name","number","filter","componentDidMount","savedContacts","localStorage","getItem","onFilterChange","e","setState","target","value","createContact","data","exist","some","item","prev","alert","removeContact","contact","componentDidUpdate","_","prevState","setItem","JSON","stringify","render","filterNormalized","toLowerCase","filtered","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","getData"],"sources":["/Users/malan/Desktop/React_practice/HW/3/src/components/App.js"],"sourcesContent":["import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactsForm from './contactsForm';\nimport Filter from './filter';\nimport ContactList from './contactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  componentDidMount = () => {\n    const savedContacts = localStorage.getItem('contacts');\n  };\n\n  componentDidUpdate(_, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  onFilterChange = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  createContact = data => {\n    const exist = [...this.state.contacts].some(item => item.name === data.name);\n    if (!exist) {\n      this.setState(prev => ({\n        contacts: [...prev.contacts, { id: nanoid(), ...data }],\n      }));\n    } else {\n      alert(`${data.name} is already in contacts`);\n    }\n  };\n\n  removeContact = e => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== e.target.id),\n    }));\n  };\n\n  render() {\n    const filterNormalized = this.state.filter.toLowerCase();\n    const filtered = [...this.state.contacts].filter(contact =>\n      contact.name.toLowerCase().includes(filterNormalized)\n    );\n\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <ContactsForm getData={this.createContact}></ContactsForm>\n\n        <h2>Contacts</h2>\n        <Filter onFilterChange={this.onFilterChange} filter={this.state.filter}></Filter>\n        <ContactList filtered={filtered} removeContact={this.removeContact}></ContactList>\n      </>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}